@model IEnumerable<MillData.Models.MillInformation>
@using MillData.ViewComponents
@using System.Net.Http

@{

    ViewData["Title"] = "Index";
}
<style>
    html, body {
        overflow-x: hidden;
        height: 100%;
    }

    .container {
        width: 100%;
    }

    .datasheet, .subform, .form {
        width: 90%;
        margin-left: 5%;
        margin-right: 5%;
        
    }

    .datasheet {
        height: 35%;
        position: fixed;
        float: left;
        overflow-x: auto;
        /*overflow-y: scroll;*/
        border-bottom: solid black;
        border-width: medium;
    }

    .subform {
        height: 35%;
        margin-top: 1%;
        margin-bottom: 2.5%;
        position: absolute;
        bottom: 0;
        float: left;
        overflow-x: auto;
        overflow-y: scroll;
    }

    footer, .footer {
        width: 100%;
        height: auto;
        float: left;
        position: absolute;
        bottom: 0;
    }

    .footerline {
        width: 100%;
        height: auto;
        position: absolute;
        bottom: 20px;
    }
        
    .epasubcat {
        text-align: center;
    }

    #datasheet tr:hover {
        background-color: skyblue;
        border-top: solid;
    }
    td {
        font-size: 12px;
        padding: 5px;
    }
    thead{
        background-color:white;
    }

    .clickable {
        cursor: pointer;
    }
    .detail{
        width:90%;
        float:left;
        padding-left:3em;
    }
    #detailnav{
        width:10%;
        float:left;
        font-size:1vw;
    }

    #notif{
        text-align:center;
        vertical-align: central;
        font-size:2vw;
        font-weight:bold;
    }
</style>

<div class="form">
    <h2>Mill Information</h2>
    @using (Html.BeginForm(FormMethod.Get))
    {
        <p>
            Search Mill ID:<span> @Html.TextBox("IDSearchString", ViewBag.CurrentFilter as string, new { @id = "searchbox" })</span>
            <input type="submit" class="millIDsearch" value="Search" onclick="return checksearch()"/>
            <script>
                //Handles input validation for the Mill ID search (numeric input only)
                function checksearch() {
                    var searchterm = document.getElementById("searchbox").value;
                    console.log(searchterm, isNaN(searchterm));
                    if (searchterm != "") {
                        if (isNaN(searchterm)) {
                            alert("Error: Please enter a numerical Mill ID.");
                            return false;   
                        }
                    }
                }
            </script>
        </p>
    }

    <br />

    <p>
        <a asp-action="Create">Create New</a>
    </p>
</div>
<script type="text/javascript">
                $(".clickable").click(function () {
                    alert("clicked");
                    var serviceURL = 'http://localhost:56860/MillInformation/Index';

                    $.ajax({
                        type: "GET",
                        url: serviceURL,
                        data: {
                            id: "@ViewBag.MillId"
                        },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: successFunc,
                        error: errorFunc
                    });

                    function successFunc(data, status) {
                        alert(data);
                    }

                    function errorFunc() {
                        alert('error');
                    }
                });
</script>

<div class="datasheet" id="datasheet">
    <table class="table">
        <thead>
            <tr class="tableheader">
                <th></th>
                <th></th>
                <th>
                    @Html.ActionLink("Mill ID", "Index", new { sortOrder = ViewBag.IDSort })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FkMillType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MillStatus)
                </th>
                <th data-toggle="tooltip" title="Date status became effective." data-placement="right">
                    @Html.DisplayNameFor(model => model.StatusDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Company)
                </th>
               
                <th>
                    @Html.DisplayNameFor(model => model.ShippingAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingAddress2)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingCity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingState)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingPostcode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShippingCountry)
                </th>
              
                @*<th>
                    @Html.ActionLink("EPA Subcategory", "Index", new { sortOrder = ViewBag.EPASort })
                  
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Naprodcat)
                </th>*@
                <th data-toggle="tooltip" title="Primary production category of mill." data-placement="right">

                    @Html.DisplayNameFor(model => model.ProdCat1)
                </th>
                @*<th data-toggle="tooltip" title="Secondary production category of mill." data-placement="right">
                    @Html.DisplayNameFor(model => model.ProdCat2)
                </th>*@
                <th></th>
                
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.Take(100))
            {
                

                <tr class="clickable" onclick="location.href = '@(Url.Action("Index", "MillInformations", new { id = item.MillId }))'">

                    <td><a asp-action="Details" asp-route-id="@item.PkMillKey"><i class="icon-zoom-in"></i></a></td>
                    <td><a asp-action="Edit" asp-route-id="@item.PkMillKey"><i class="icon-edit"></i></a></td>
                    <td class="clickable" onclick="location.href = '@(Url.Action("Details", "MillInformations", new { id = item.PkMillKey }))'">
                        @Html.DisplayFor(modelItem => item.MillId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FkMillType.PkTypeId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MillStatus)
                    </td>
                    <td>
                        @{ if (item.StatusDate != null && item.StatusDate.Value != null)
                            {
                                string date = item.StatusDate.Value.ToString("MM/dd/yyyy");
                                @Html.DisplayFor(model => date)
                            }
                        }
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Company)
                    </td>



                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingAddress2)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingCity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingState)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingPostcode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShippingCountry)
                    </td>

                    @*<td class="epasubcat">
                        @Html.DisplayFor(modelItem => item.FkEpasubcat.Subcat)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Naprodcat)
                    </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.ProdCat1)
                    </td>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.ProdCat2)
                    </td>*@
                    <td>


                        <a asp-action="Delete" asp-route-id="@item.PkMillKey"><font color="red">Delete</font></a><br />
                    </td>
                </tr>
                            }
        </tbody>
    </table>
</div>
    <script>
                document.getElementById("datasheet").addEventListener("scroll", function () {
                    var translate = "translate(0," + this.scrollTop + "px)";
                    this.querySelector("thead").style.transform = translate;
                });
</script>
<div class="subform">

    <!-- Nav tabs -->
    <ul class="nav nav-pills nav-stacked" role="tablist" id="detailnav">
        <li role="presentation" id="sidebutton" class="active"><a href="#first" aria-controls="first" role="tab" data-toggle="tab">Mill Detail</a></li>
        <li role="presentation" id="sidebutton"><a href="#second" aria-controls="second" role="tab" data-toggle="tab">Production Data</a></li>
    </ul>
    
    

    <div class="detail">

        @{
            //Gets Mill ID from path
            string path = Context.Request.Path.ToString();

            //If path != '/', that is a mill ID is chosen for detail,
            //display details. Else display error
            if (path != "/")
            {
                var split = path.Split('/');

                int chosenid = Int32.Parse(split[3]);
                
                //Tab panes
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="first">
                        @await Component.InvokeAsync(nameof(MillDetail), new { id = chosenid })
                    </div>
                    <div role="tabpanel" class="tab-pane" id="second">
                        @await Component.InvokeAsync(nameof(ProdDetail), new { id = chosenid })
                    </div>
                </div>
            }
            else
            { <div id="notif">Please choose a mill from the list above to see details.</div> }
    }
</div>
</div>
